openapi: 3.0.0
info:
  title: User API
  version: '1.0'
  description: 'Get a user, get the collection of users, update a user, delete a user.'
servers:
  - url: 'http://localhost:5000'
paths:
  /user:
    get:
      summary: GetUsers
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/user'
      operationId: get-user
      description: Get the collection of users
    post:
      summary: AddUser
      operationId: post-user
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'
      description: Add a user to the collection
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/userInfo'
    put:
      summary: UpdateUser
      operationId: put-user
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'
      description: 'Update the userinfo including name, email, address and password.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/userInfo'
    delete:
      summary: DeleteUser
      operationId: delete-user
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
      description: Delete a user by providing id
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
  '/user/{:id}':
    parameters:
      - schema:
          type: string
        name: ':id'
        in: path
        required: true
    get:
      summary: GetUserById
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'
      operationId: get-user-userId
      description: Get a user
      parameters: []
  /user/cart:
    put:
      summary: UpdateCart
      operationId: put-user-cart
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cart'
      description: UpdateCart can be used for adding or removing meal from a cart. The operation only accepts either ADD or REMOVE
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                operation:
                  type: string
                  enum:
                    - ADD
                    - REMOVE
                id:
                  type: string
                mealName:
                  type: string
                mealPrice:
                  type: string
components:
  schemas:
    userInfo:
      title: userInfo
      type: object
      properties:
        id:
          type: string
          default: 5fae04aaa40ba56ebddddf8a
        name:
          type: string
        email:
          type: string
        address:
          type: string
        password:
          type: string
    user:
      title: user
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string
        address:
          type: string
        password:
          type: string
        mealCart:
          $ref: '#/components/schemas/cart'
        orders:
          type: array
          items:
            $ref: ./Order-API.v1.yaml#/components/schemas/order
    cart:
      title: cart
      type: array
      items:
        $ref: ./Order-API.v1.yaml#/components/schemas/mealQuantity
  securitySchemes:
    API Key:
      name: apikey
      type: apiKey
      in: query
security:
  - API Key: []
